#!/usr/bin/env ruby
require 'dendrite'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: register [options]"
  opts.on("-s", "--service SERVICE_NAME", "service name") do |v|
    options[:service_name] = v
  end

  opts.on("-c", "--config CONFIG_FILE", "config file") do |v|
    options[:config] = v
  end
end.parse!

puts "Loading config"
Dendrite::Config.load(source: options[:config])
graph = Dendrite::IO.load(source: Dendrite::Config.services_source)

services = begin
  Dendrite::IO.read(source: Dendrite::Config.nerve_config_path)[:services].keys
rescue
  []
end.collect(&:to_s)
services += options[:service_name].split(',')
services.uniq!

raise Dendrite::InvalidData unless graph.valid?
raise Dendrite::UnknownService unless services.collect {|service_name| graph[service_name]}.all?

puts "Generating synapse"
synapse = Dendrite::Generators::Synapse.new(graph: graph, service_names: services)
Dendrite::IO.write(data: synapse.to_yaml, destination: Dendrite::Config.synapse_config_path)

puts "Generating nerve"
nerve = Dendrite::Generators::Nerve.new(graph: graph, service_names: services)
Dendrite::IO.write(data: nerve.to_yaml, destination: Dendrite::Config.nerve_config_path)
