#!/usr/bin/env ruby
require 'dendrite'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: proxy [options]"
  opts.on("-s", "--services SERVICE_NAME:PORT,..", "service name and port") do |v|
    options[:services] = v
  end

  opts.on("-c", "--config CONFIG_FILE", "config file") do |v|
    options[:config] = v
  end
end.parse!

services = options[:services].split(',').inject({}) do |hsh, name_port|
  name, port = name_port.split(':')
  name = name.strip
  port = port.to_i
  hsh[name] = port
  hsh
end

puts "Loading config"
Dendrite::Config.load(source: options[:config])
puts "Loading graph"
graph = Dendrite::IO.load(source: Dendrite::Config.services_source)
raise Dendrite::InvalidData unless graph.valid?
raise Dendrite::UnknownService unless services.keys.collect {|service_name| graph[service_name]}.all?

services.each do |name, port|
  puts "adding proxy for #{name}"
  Dendrite::Config.custom_frontend!(name: "custom_#{name}", port: port, backend_name: name)
end
synapse = Dendrite::Generators::Synapse.new(graph: graph, service_names: services, proxy: true)
Dendrite::IO.write(data: synapse.to_yaml, destination: Dendrite::Config.synapse_config_path)

